package com.ict.web.modules.data.electricity.web.cne;

import com.google.common.collect.Lists;
import com.ict.web.commons.web.BaseController;
import com.ict.web.commons.web.Page;
import com.ict.web.modules.data.electricity.entity.cne.BasicNetBar;
import com.ict.web.modules.data.electricity.entity.cne.ContactWire;
import com.ict.web.modules.data.electricity.service.cne.BasicNetBarService;
import com.ict.web.modules.data.electricity.service.cne.ContactWireService;
import com.ict.web.modules.sys.entity.Attachment;
import com.ict.web.modules.sys.service.AttachmentService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import java.util.List;

/**
 * 接触导线的控制器
 * Created by nemo on 16-5-24.
 */
@Controller
@RequestMapping(value = "device/electricity/cne/contactWire")
public class ContactWireController extends BaseController {

     @Autowired
    private AttachmentService attachmentService;

    @Autowired
    private ContactWireService service;
    @Autowired
    private BasicNetBarService basicNetBarService;

    @ModelAttribute("contactWire")
    public ContactWire get(@RequestParam(required = false) Long id) {
        if (id != null) {
            return service.getById(id);
        } else {
            return new ContactWire();
        }
    }


    /**
     * 默认首页
     * @param model
     * @param entity 查询参数
     * @return
     */
    @RequestMapping(value = {"","index"})
    public String index(Model model, ContactWire entity, HttpServletRequest request, HttpServletResponse response,Long catalog){

        Page<ContactWire> page = service.getByPage(new Page<ContactWire>(request,response),entity);

        model.addAttribute("page",page);
        model.addAttribute("entity",entity);
        model.addAttribute("catalog",catalog);
        return "modules/data/electricity/cne/contactWireList";
    }

    /**
     * 前往新增或者修改
     * @param entity
     * @param model
     * @return
     */
    @RequestMapping(value = "form")
    public String form(ContactWire entity, Model model,Long catalog) {

        //图片附件
        String attIds = entity.getImgAttachments();
        List<Attachment> atts = attachmentService.getAttchByIds(attIds);
        model.addAttribute("imgAtts",atts);

        //图纸附件
        attIds = entity.getAttachments();
        atts = attachmentService.getAttchByIds(attIds);
        model.addAttribute("atts",atts);

		//说明文当
		attIds = entity.getDocAttchments();
		atts = attachmentService.getAttchByIds(attIds);
		model.addAttribute("docAtts",atts);

		//技术规范
		attIds = entity.getTechnologyAttchments();
		atts = attachmentService.getAttchByIds(attIds);
		model.addAttribute("technologyAtts",atts);
		
		List<BasicNetBar> barList = Lists.newArrayList();
    	//获取关联的基础网杆数据id
    	String basicnetbarIds = entity.getBasicnetbarIds();
    	if(basicnetbarIds!=null && !"".equals(basicnetbarIds)){
    		model.addAttribute("basicnetbarIds", basicnetbarIds);
    		String[] basicnetbarIdsArray = basicnetbarIds.split(",");
    		List<String> mlist = Lists.newArrayList();
    		for(String basicnetbarId: basicnetbarIdsArray){
    			mlist.add(basicnetbarId);
    		}
    		entity.setBasicnetbarList(mlist);
    	}
    	
    	//获取在中心里程在起始里程和终止里程之间的基础网杆数据
    	barList = basicNetBarService.getByStartAnbEnd(entity.getStartMile(), entity.getEndMile());
    	if(barList!=null && barList.size()>0){
    		model.addAttribute("barList", barList);
    	}

        model.addAttribute("entity", entity);
        model.addAttribute("catalog",catalog);
        return "modules/data/electricity/cne/contactWireForm";
    }

    /**
     * 保存方法
     * @param entity
     * @param redirectAttributes
     * @return
     */
    @RequestMapping(value = "save",method = RequestMethod.POST)
    public String save(ContactWire entity, RedirectAttributes redirectAttributes,Long catalog,Model model,HttpServletRequest request){

        MultipartHttpServletRequest a = (MultipartHttpServletRequest) request;
        try {
            // 图片资料
			String remark = request.getParameter("imgAttsRemark");
            List<MultipartFile> files = a.getFiles("pierfile");
            List<Attachment> atts = attachmentService.saveAllUploadFile(files,remark);
            entity.setImgAttachments(attachmentService.attchsToStringIds(entity.getImgAttachments(),atts));

            // 图纸资料
            files = a.getFiles("pierfile2");
			remark = request.getParameter("attsRemark");
            atts = attachmentService.saveAllUploadFile(files,remark);
            entity.setAttachments(attachmentService.attchsToStringIds(entity.getAttachments(),atts));

			// 说明文档
			files = a.getFiles("pierfile3");
			remark = request.getParameter("docAttsRemark");
			atts = attachmentService.saveAllUploadFile(files,remark);
			entity.setDocAttchments(attachmentService.attchsToStringIds(entity.getDocAttchments(),atts));

			// 技术规范
			files = a.getFiles("pierfile4");
			remark = request.getParameter("technologyRemark");
			atts = attachmentService.saveAllUploadFile(files,remark);
			entity.setTechnologyAttchments(attachmentService.attchsToStringIds(entity.getTechnologyAttchments(),atts));

            //操作附件表删除选择的附件
            attachmentService.delAttchByIds(entity.getDelAttch());

        }catch (Exception e){
            e.printStackTrace();
        }
        
    	//将list数据转化成string存入实体中
    	List<String> mlist = entity.getBasicnetbarList();
    	if(mlist!=null){
    		StringBuffer mstr = new StringBuffer("");
    		for(int i=0;i<mlist.size();i++){
    			String mids = mlist.get(i);
    			if(i != mlist.size()-1){
    				mstr.append(mids+",");
    			}else{
    				mstr.append(mids);
    			}
    		}
    		entity.setBasicnetbarIds(mstr.toString());
    	}else{
    		entity.setBasicnetbarIds("");
    	}

        service.save(entity);

        addMessage(redirectAttributes,"保存成功");
        redirectAttributes.addAttribute("catalog",catalog);
        return "redirect:/device/electricity/cne/contactWire";
    }

    /**
     * 删除方法
     * @param id
     * @param redirectAttributes
     * @return
     */
    @RequestMapping(value = "delete")
    public String delete(Long id,RedirectAttributes redirectAttributes,Long catalog){

        service.delete(id);

        addMessage(redirectAttributes,"删除成功");
        redirectAttributes.addAttribute("catalog",catalog);

        return "redirect:/device/electricity/cne/contactWire";
    }
}
