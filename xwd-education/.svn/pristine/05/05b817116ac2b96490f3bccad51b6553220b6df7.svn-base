package com.ict.web.modules.data.work.web;



import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.ict.web.commons.config.Global;
import com.ict.web.commons.web.BaseController;
import com.ict.web.commons.web.Page;
import com.ict.web.modules.assetcard.entity.AssetCard;
import com.ict.web.modules.assetcard.service.AssetCardServices;
import com.ict.web.modules.data.work.entity.RoadRailParallel;
import com.ict.web.modules.data.work.service.RoadRailParallelService;
import com.ict.web.modules.sys.entity.Catalog;
import com.ict.web.modules.sys.service.CatalogService;



/**
 * 
 *  @description:公铁两用Controller
 *  @author: wangjianwei 
 *  @create Date:2016年4月25日 下午2:39:42
 */
@Controller
@RequestMapping(value = "data/work/roadrailparallel")
public class RoadRailParallelController extends BaseController {
	@Autowired
	private CatalogService catalogService;
	@Autowired
	RoadRailParallelService roadRailParallelService;
	@Autowired
	private AssetCardServices assetCardservice;

	@ModelAttribute
	public RoadRailParallel get(@RequestParam(required = false) Long id) {
		if (id != null) {
			return roadRailParallelService.get(id);
		} else {
			return new RoadRailParallel();
		}
	}

	@RequiresPermissions("data:work:roadrailparallel:view")
	@RequestMapping(value = { "list", "" })
	public String list(RoadRailParallel entity, HttpServletRequest request,
			HttpServletResponse response, Model model,@RequestParam(required = false) Long catalog) {
		Page<RoadRailParallel> page = roadRailParallelService.find(new Page<RoadRailParallel>(request, response),
				entity,catalog);
		model.addAttribute("page", page);
		if(catalog!=null){			
			Catalog cat = catalogService.getById(catalog);
			entity.setCat(cat);
		}
		model.addAttribute("roadRailParallel", entity);
		return "modules/data/work/roadRailParallelList";
	}

	@RequiresPermissions("data:work:roadrailparallel:view")
	@RequestMapping(value = "form")
	public String form(RoadRailParallel entity, Model model,@RequestParam(required = false) Long catalog) {
		if(catalog!=null){			
			Catalog cat = catalogService.getById(catalog);
			entity.setCat(cat);
			List<AssetCard> listorg= assetCardservice.getByCatalog(catalog);
			if(listorg.size()>0){			
				model.addAttribute("listorg", listorg);
			}else{
			List<AssetCard> listorgs= assetCardservice.getByCatalog(cat.getParents().getId());
			model.addAttribute("listorg", listorgs);
			}
		}
		model.addAttribute("roadRailParallel", entity);
		return "modules/data/work/roadRailParallelForm";
	}
	
	@RequiresPermissions("data:work:roadrailparallel:view")
	@RequestMapping(value = "view")
	public String view(RoadRailParallel entity, Model model) {
		model.addAttribute("roadRailParallel", entity);
		return "modules/data/work/roadRailParallelView";
	}

	@RequiresPermissions("data:work:roadrailparallel:edit")
	@RequestMapping(value = "save")
	public String save(RoadRailParallel entity, Model model,
			RedirectAttributes redirectAttributes) {
		if (Global.isDemoMode()) {
			addMessage(redirectAttributes, "演示模式，不允许操作！");
			return "redirect:/data/work/roadrailparallel/?repage";// "+Global.getAdminPath()+"
		}
		if (!beanValidator(model, entity)) {
			return form(entity, model,entity.getCat().getId());
		}
		roadRailParallelService.save(entity);
		addMessage(redirectAttributes, "保存成功");
		return "redirect:/data/work/roadrailparallel/?repage&catalog="+entity.getCat().getId();// "+Global.getAdminPath()+"
	}

	@RequiresPermissions("data:work:roadrailparallel:edit")
	@RequestMapping(value = "deleteMulti")
    public String deleteMulti(@RequestParam String assembleDelId, RedirectAttributes redirectAttributes) {
		if (Global.isDemoMode()) {
			addMessage(redirectAttributes, "演示模式，不允许操作！");
			return "redirect:/data/work/roadrailparallel/?repage";// "+Global.getAdminPath()+"
		}
		roadRailParallelService.deleteMulti(assembleDelId);
		addMessage(redirectAttributes, "删除成功");
		return "redirect:/data/work/roadrailparallel/?repage";// "+Global.getAdminPath()+"
	}

    /**
     * 删除方法
     * @param id
     * @param catalog
     * @param redirectAttributes
     * @return
     */
    @RequestMapping(value = "delete")
    public String delete(Long id,Long catalog,RedirectAttributes redirectAttributes){

    	roadRailParallelService.delete(id);

        addMessage(redirectAttributes,"删除成功");

        return "redirect:/data//work/roadrailparallel/list?repage&catalog="+catalog;
    }
}
