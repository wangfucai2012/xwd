package com.ict.web.modules.data.electricity.web.cne;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.google.common.collect.Lists;
import com.ict.web.commons.web.BaseController;
import com.ict.web.commons.web.Page;
import com.ict.web.modules.data.electricity.entity.cne.JqLine;
import com.ict.web.modules.data.electricity.entity.cne.BasicNetBar;
import com.ict.web.modules.data.electricity.service.cne.JqLineService;
import com.ict.web.modules.data.electricity.service.cne.BasicNetBarService;

/**
 * 
 *  @description:接触网专业-AF线controller
 *  @author: lutao 
 *  @create Date:2016年7月8日
 */
@Controller
@RequestMapping(value = "device/electricity/cne/jqline")
public class JqLineController extends BaseController {
    //展示页面地址
    private static final String listPath = "modules/data/electricity/cne/jqLineList";
    //新增修改页面地址
    private static final String formPath = "modules/data/electricity/cne/jqLineForm";
    //首页地址
    private static final String indexPath = "device/electricity/cne/jqline";


    @Autowired
    private JqLineService service;
    @Autowired
    private BasicNetBarService basicNetBarService;

    @ModelAttribute("jqLine")
    public JqLine get(@RequestParam(required = false) Long id) {
        if (id != null) {
            return service.getById(id);
        } else {
            return new JqLine();
        }
    }


    /**
     * 默认首页
     * @param model
     * @param entity 查询参数
     * @return
     */
    @RequestMapping(value = {"","index"})
    public String index(Model model, JqLine entity, HttpServletRequest request, HttpServletResponse response,Long catalog){

        Page<JqLine> page = service.getByPage(new Page<JqLine>(request,response),entity);

        model.addAttribute("page",page);
        model.addAttribute("entity",entity);
        model.addAttribute("catalog",catalog);
        return listPath;
    }

    /**
     * 前往新增或者修改
     * @param entity
     * @param model
     * @return
     */
    @RequestMapping(value = "form")
    public String form(JqLine entity, Model model,Long catalog) {
    	
    	List<BasicNetBar> barList = Lists.newArrayList();
    	//获取关联的基础网杆数据id
    	String basicnetbarIds = entity.getBasicnetbarIds();
    	if(basicnetbarIds!=null && !"".equals(basicnetbarIds)){
    		model.addAttribute("basicnetbarIds", basicnetbarIds);
    		String[] basicnetbarIdsArray = basicnetbarIds.split(",");
    		List<String> mlist = Lists.newArrayList();
    		for(String basicnetbarId: basicnetbarIdsArray){
    			mlist.add(basicnetbarId);
    		}
    		entity.setBasicnetbarList(mlist);
    	}
    	
    	//获取在中心里程在起始里程和终止里程之间的基础网杆数据
    	barList = basicNetBarService.getByStartAnbEnd(entity.getStartMile(), entity.getEndMile());
    	if(barList!=null && barList.size()>0){
    		model.addAttribute("barList", barList);
    	}
    	
        model.addAttribute("entity", entity);
        model.addAttribute("catalog",catalog);
        return formPath;
    }

    /**
     * 保存方法
     * @param entity
     * @param redirectAttributes
     * @return
     */
    @RequestMapping(value = "save",method = RequestMethod.POST)
    public String save(JqLine entity, RedirectAttributes redirectAttributes,Long catalog,Model model){

    	//将list数据转化成string存入实体中
    	List<String> mlist = entity.getBasicnetbarList();
    	if(mlist!=null){
    		StringBuffer mstr = new StringBuffer("");
    		for(int i=0;i<mlist.size();i++){
    			String mids = mlist.get(i);
    			if(i != mlist.size()-1){
    				mstr.append(mids+",");
    			}else{
    				mstr.append(mids);
    			}
    		}
    		entity.setBasicnetbarIds(mstr.toString());
    	}else{
    		entity.setBasicnetbarIds("");
    	}
    	
        service.save(entity);

        addMessage(redirectAttributes,"保存成功");
        redirectAttributes.addAttribute("catalog",catalog);
        return "redirect:/"+indexPath;
    }

    /**
     * 删除方法
     * @param id
     * @param redirectAttributes
     * @return
     */
    @RequestMapping(value = "delete")
    public String delete(Long id,RedirectAttributes redirectAttributes,Long catalog){

        service.delete(id);

        addMessage(redirectAttributes,"删除成功");
        redirectAttributes.addAttribute("catalog",catalog);

        return "redirect:/"+indexPath;
    }
}
