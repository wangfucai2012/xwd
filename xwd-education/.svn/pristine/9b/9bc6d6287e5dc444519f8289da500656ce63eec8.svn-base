package com.ict.web.modules.data.dynamicinfo;

import com.ict.web.commons.utils.StringUtils;
import com.ict.web.commons.web.BaseController;
import com.ict.web.commons.web.Page;
import com.ict.web.modules.data.dynamicinfo.entity.SpliceDynamic;
import com.ict.web.modules.data.dynamicinfo.service.SpliceDynamicService;
import com.ict.web.modules.data.dynamicinfo.service.SpliceService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 *  @Controller
 *  @description:接头台账动态数据Controller
 *  @author:wangjianwei 
 *  @create Date:2016年6月13日 下午4:57:11
 */
@Controller
@RequestMapping(value = "data/dynamicinfo/splicedynamic")
public class SpliceDynamicController extends BaseController {


    @Autowired
    private SpliceDynamicService service;
    @Autowired
    private SpliceService spliceservice;

    @ModelAttribute("spliceDynamic")
    public SpliceDynamic get(@RequestParam(required = false) Long id) {
        if (id != null) {
            return service.getById(id);
        } else {
            return new SpliceDynamic();
        }
    }

    /**
     * 默认首页
     * @param model
     * @param entity 查询参数
     * @return
     */
    @RequestMapping(value = {"","index"})
    public String index(Model model, SpliceDynamic entity, HttpServletRequest request, HttpServletResponse response,String startDate,String endDate,Long spliceId){
		SimpleDateFormat shortSdf = new SimpleDateFormat("yyyy-MM-dd");
		Date sDate = null;
		Date eDate =null;
		if(StringUtils.isNotEmpty(startDate)){
			try {
				sDate=shortSdf.parse(startDate);
			} catch (ParseException e) {
				e.printStackTrace();
			}
		}
		if(StringUtils.isNotEmpty(endDate)){
			try {
				eDate=shortSdf.parse(endDate);
			} catch (ParseException e) {
				e.printStackTrace();
			}
		}
        Page<SpliceDynamic> page = service.getByPage(new Page<SpliceDynamic>(request,response),entity,sDate,eDate,spliceId);
       entity.setSplice(spliceservice.getById(spliceId));
        model.addAttribute("page",page);
        model.addAttribute("spliceDynamic",entity);
        return "modules/data/dynamicinfo/spliceDynamicList";
    }

    /**
     * 前往新增或者修改
     * @param entity
     * @param model
     * @return
     */
    @RequestMapping(value = "form")
    public String form(SpliceDynamic entity, Model model,Long spliceId) {
    	entity.setSplice(spliceservice.getById(spliceId));
        model.addAttribute("spliceDynamic", entity);
        return "modules/data/dynamicinfo/spliceDynamicForm";
    }

    /**
     * 保存方法
     * @param entity
     * @param redirectAttributes
     * @return
     */
    @RequestMapping(value = "save",method = RequestMethod.POST)
    public String save(SpliceDynamic entity, RedirectAttributes redirectAttributes,Model model,Long gjsfxId){

        service.save(entity);

        addMessage(redirectAttributes,"保存成功");

        return "redirect:/data/dynamicinfo/splicedynamic?spliceId="+entity.getSplice().getId();
    }

    /**
     * 删除方法
     * @param id
     * @param redirectAttributes
     * @return
     */
    @RequestMapping(value = "delete")
    public String delete(Long id,RedirectAttributes redirectAttributes){

        service.delete(id);

        addMessage(redirectAttributes,"删除成功");

        return "redirect:/data/dynamicinfo/splicedynamic";
    }
}
