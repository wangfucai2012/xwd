package com.ict.web.modules.data.electricity.web.tem;

import com.ict.web.commons.web.BaseController;
import com.ict.web.commons.web.Page;
import com.ict.web.modules.data.electricity.entity.tem.LoadSwitch;
import com.ict.web.modules.data.electricity.service.tem.LoadSwitchService;
import com.ict.web.modules.sys.entity.Catalog;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * 
 *  @description:  * 
 *  27.5kV负荷开关柜（19）
 * 12kV负荷开关柜（21）
 *  Controller
 *  @author:wangjianwei 
 *  @create Date:2016年6月19日 下午3:32:45
 */
@Controller
@RequestMapping(value = "device/electricity/tem/loadswitch")
public class LoadSwitchController extends BaseController {

    //展示页面地址
    private static final String listPath = "modules/data/electricity/tem/loadSwitchList";
    //新增修改页面地址
    private static final String formPath = "modules/data/electricity/tem/loadSwitchForm";
    //首页地址
    private static final String indexPath = "device/electricity/tem/loadswitch";


    @Autowired
    private LoadSwitchService service;

    @ModelAttribute("loadSwitch")
    public LoadSwitch get(@RequestParam(required = false) Long id) {
        if (id != null) {
            return service.getById(id);
        } else {
            return new LoadSwitch();
        }
    }


    /**
     * 默认首页
     * @param model
     * @param entity 查询参数
     * @param catalog 当前的目录ID
     * @return
     */
    @RequestMapping(value = {"","index"})
    public String index(Model model, LoadSwitch entity, HttpServletRequest request, HttpServletResponse response,Long catalog){

        if(entity.getCata()==null){
            entity.setCata(new Catalog(catalog));
        }

        Page<LoadSwitch> page = service.getByPage(new Page<LoadSwitch>(request,response),entity);

        model.addAttribute("page",page);
        model.addAttribute("entity",entity);
        model.addAttribute("catalog",catalog);
        return listPath;
    }

    /**
     * 前往新增或者修改
     * @param entity
     * @param model
     * @param catalog 当前的目录ID
     * @return
     */
    @RequestMapping(value = "form")
    public String form(LoadSwitch entity, Model model,Long catalog) {
        model.addAttribute("entity", entity);
        model.addAttribute("catalog",catalog);
        return formPath;
    }

    /**
     * 保存方法
     * @param entity 需要保存的实体
     * @param redirectAttributes
     * @param catalog 当前的目录ID
     * @return
     */
    @RequestMapping(value = "save",method = RequestMethod.POST)
    public String save(LoadSwitch entity, RedirectAttributes redirectAttributes,Long catalog){

        service.save(entity);

        addMessage(redirectAttributes,"保存成功");
        redirectAttributes.addAttribute("catalog",catalog);
        return "redirect:/"+indexPath;
    }

    /**
     * 删除方法
     * @param id 需要删除的对象ID
     * @param redirectAttributes
     * @param catalog 当前的目录ID
     * @return
     */
    @RequestMapping(value = "delete")
    public String delete(Long id,RedirectAttributes redirectAttributes,Long catalog){

        service.delete(id);

        addMessage(redirectAttributes,"删除成功");
        redirectAttributes.addAttribute("catalog",catalog);

        return "redirect:/"+indexPath;
    }
}
