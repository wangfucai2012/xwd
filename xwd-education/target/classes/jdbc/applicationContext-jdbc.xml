<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd"
	default-lazy-init="true">

	<description>Spring的JDBC配置放这里</description>


	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder
			ignore-unresolvable="true" location="classpath*:/application.properties" />
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">
			<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<!-- 基本属性 url、user、password -->
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="${jdbc.pool.init}" />
			<property name="minIdle" value="${jdbc.pool.minIdle}" />
			<property name="maxActive" value="${jdbc.pool.maxActive}" />

			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />

			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />

			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<property name="validationQuery" value="${jdbc.testSql}" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />

			<!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用） -->
			<!-- <property name="poolPreparedStatements" value="true" /> -->
			<!-- <property name="maxPoolPreparedStatementPerConnectionSize"
				value="20" /> -->

			<!-- 配置监控统计拦截的filters -->
			<property name="filters" value="stat" />
			<!-- 监控统计慢SQL，5000毫秒 -->
			<property name="connectionProperties" value="druid.stat.slowSqlMillis=5000" />
		</bean>
		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<!-- <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" 
			destroy-method="close"> -->
		<!-- Connection Info -->
		<!-- <property name="driverClassName" value="${jdbc.driver}" /> -->
		<!-- <property name="url" value="${jdbc.url}" /> -->
		<!-- <property name="username" value="${jdbc.username}" /> -->
		<!-- <property name="password" value="${jdbc.password}" /> -->
		<!-- Connection Pooling Info -->
		<!-- <property name="maxActive" value="${jdbc.pool.maxActive}" /> -->
		<!-- <property name="maxIdle" value="${jdbc.pool.maxIdle}" /> -->
		<!-- <property name="defaultAutoCommit" value="false" /> -->
		<!-- 连接Idle半个小时后超时，每15分钟检查一次900000,30000=30sec每XXX运行一次空闲连接回收器 -->
		<!-- <property name="timeBetweenEvictionRunsMillis" value="30000" /> -->
		<!-- 池中的连接空闲30分钟后被回收,默认值就是30分钟。 -->
		<!-- <property name="minEvictableIdleTimeMillis" value="1800000" /> -->
		<!-- <property name="testWhileIdle" value = "true"/> -->
		<!-- <property name="testOnBorrow" value = "false"/> -->
		<!-- <property name="validationQuery" value="${jdbc.pool.validationQuery}"/> -->
		<!-- <property name="validationInterval" value="${jdbc.pool.validationInterval}" 
			/> -->
		<!-- </bean> -->
		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!-- <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" 
			/> -->

		<!-- 数据源配置, 不使用连接池 -->
		<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
		<!-- <property name="driverClassName" value="${jdbc.driver}" /> -->
		<!-- <property name="url" value="${jdbc.url}" /> -->
		<!-- <property name="username" value="${jdbc.username}"/> -->
		<!-- <property name="password" value="${jdbc.password}"/> -->
		<!-- </bean> -->
	</beans>

	<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.development.properties" />

		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
	</beans>

	<!-- functional test 环境 -->
	<beans profile="functional">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.functional.properties,
          			  classpath*:/application.functional-local.properties" />

		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>

		<!-- 初始化数据表结构 -->
		<jdbc:initialize-database data-source="dataSource"
			ignore-failures="ALL">
			<jdbc:script location="classpath:sql/${db.type}/schema.sql" />
		</jdbc:initialize-database>
	</beans>

	<!-- unit test环境 -->
	<beans profile="test">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.test.properties" />

		<!-- Spring Simple连接池 -->
		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>

		<!-- 初始化数据表结构 与默认数据 <jdbc:initialize-database data-source="dataSource" 
			ignore-failures="ALL"> <jdbc:script location="classpath:sql/h2/schema.sql" 
			/> <jdbc:script location="classpath:data/h2/import-data.sql" encoding="UTF-8"/> 
			</jdbc:initialize-database> -->
	</beans>
</beans>